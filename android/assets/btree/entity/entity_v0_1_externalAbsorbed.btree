import isStanding?:"org.river.exertion.btree.v0_1.task_cond.IsStandingCondition"
import isOther?:"org.river.exertion.btree.v0_1.task_cond.IsOtherCondition"

import hasRecognition?:"org.river.exertion.btree.v0_1.task_cond.HasRecognitionCondition"

import approach:"org.river.exertion.btree.v0_1.task_cond.ApproachTask"
import scan:"org.river.exertion.btree.v0_1.task_cond.ScanTask"
import assessThreat:"org.river.exertion.btree.v0_1.task_cond.AssessThreatTask"
import assessOpportunity:"org.river.exertion.btree.v0_1.task_cond.AssessOpportunityTask"
import stand:"org.river.exertion.btree.v0_1.task_cond.StandTask"
import abide:"org.river.exertion.btree.v0_1.task_cond.AbideTask"

root
    selector
        hasRecognition?
        (isStanding?) selector
            (isOther?) sequence
                assessThreat
                assessOpportunity
            sequence
                approach
                scan
        stand