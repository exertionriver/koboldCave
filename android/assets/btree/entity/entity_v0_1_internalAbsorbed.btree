import isAwake?:"org.river.exertion.btree.v0_1.task_cond.IsAwakeCondition"
import isLyingDown?:"org.river.exertion.btree.v0_1.task_cond.IsLyingDownCondition"
import isSitting?:"org.river.exertion.btree.v0_1.task_cond.IsSittingCondition"
import isStanding?:"org.river.exertion.btree.v0_1.task_cond.IsStandingCondition"
import isIntAnxietyHigher?:"org.river.exertion.btree.v0_1.task_cond.IsIntAnxietyHigherCondition"
import isExtAnxietyHigher?:"org.river.exertion.btree.v0_1.task_cond.IsExtAnxietyHigherCondition"

import hasExternalStim?:"org.river.exertion.btree.v0_1.task_cond.HasExternalStimCondition"

import abide:"org.river.exertion.btree.v0_1.task_cond.AbideTask"
import think:"org.river.exertion.btree.v0_1.task_cond.ThinkTask"
import watch:"org.river.exertion.btree.v0_1.task_cond.WatchTask"
import look:"org.river.exertion.btree.v0_1.task_cond.LookTask"
import reflect:"org.river.exertion.btree.v0_1.task_cond.ReflectTask"
import sit:"org.river.exertion.btree.v0_1.task_cond.SitTask"
import stand:"org.river.exertion.btree.v0_1.task_cond.StandTask"

root
    selector
        hasExternalStim?
        (isAwake?) dynamicGuardSelector
            (isLyingDown?) sit
            dynamicGuardSelector
                (isIntAnxietyHigher?) randomSelector
                    watch
                    look
                (isExtAnxietyHigher?) randomSelector
                    think
                    reflect
                abide
            (isStanding?) sit
            abide
        abide
