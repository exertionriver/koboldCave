import isDead?:"org.river.exertion.btree.v0_1.task_cond.IsDeadCondition"
import isAwake?:"org.river.exertion.btree.v0_1.task_cond.IsAwakeCondition"
import isLyingDown?:"org.river.exertion.btree.v0_1.task_cond.IsLyingDownCondition"
import isSitting?:"org.river.exertion.btree.v0_1.task_cond.IsSittingCondition"
import isStanding?:"org.river.exertion.btree.v0_1.task_cond.IsStandingCondition"
import isIntAnxietyHigher?:"org.river.exertion.btree.v0_1.task_cond.IsIntAnxietyHigherCondition"
import isExtAnxietyHigher?:"org.river.exertion.btree.v0_1.task_cond.IsExtAnxietyHigherCondition"
import isOther?:"org.river.exertion.btree.v0_1.task_cond.IsOtherCondition"

import hasInternalStim?:"org.river.exertion.btree.v0_1.task_cond.HasInternalStimCondition"
import hasExternalStim?:"org.river.exertion.btree.v0_1.task_cond.HasExternalStimCondition"
import hasRecognition?:"org.river.exertion.btree.v0_1.task_cond.HasRecognitionCondition"

import abide:"org.river.exertion.btree.v0_1.task_cond.AbideTask"
import sleep:"org.river.exertion.btree.v0_1.task_cond.SleepTask"
import think:"org.river.exertion.btree.v0_1.task_cond.ThinkTask"
import watch:"org.river.exertion.btree.v0_1.task_cond.WatchTask"
import look:"org.river.exertion.btree.v0_1.task_cond.LookTask"
import reflect:"org.river.exertion.btree.v0_1.task_cond.ReflectTask"
import approach:"org.river.exertion.btree.v0_1.task_cond.ApproachTask"
import scan:"org.river.exertion.btree.v0_1.task_cond.ScanTask"
import assessThreat:"org.river.exertion.btree.v0_1.task_cond.AssessThreatTask"
import assessOpportunity:"org.river.exertion.btree.v0_1.task_cond.AssessOpportunityTask"
import resolveDraw:"org.river.exertion.btree.v0_1.task_cond.ResolveDrawTask"
import sit:"org.river.exertion.btree.v0_1.task_cond.SitTask"
import lieDown:"org.river.exertion.btree.v0_1.task_cond.LieDownTask"
import stand:"org.river.exertion.btree.v0_1.task_cond.StandTask"

subtree name:"notAbsorbed"
    selector
        hasInternalStim?
        isDead?
        (isLyingDown?) sleep
        (isSitting?) lieDown
        abide

subtree name:"internalAbsorbed"
    selector
        hasExternalStim?
        (isAwake?) dynamicGuardSelector
            (isLyingDown?) sit
            dynamicGuardSelector
                (isIntAnxietyHigher?) randomSelector
                    watch
                    look
                    (isSitting?) stand
                (isExtAnxietyHigher?) randomSelector
                    think
                    reflect
                    (isStanding?) sit
                abide
            (isStanding?) sit
            abide

subtree name:"externalAbsorbed"
    selector
        hasRecognition?
        sequence
            (isSitting?) stand
            approach
            scan
            (isOther?) sequence
                assessThreat
                assessOpportunity

root
    sequence
        alwaysSucceed
            $notAbsorbed
        (hasInternalStim?) $internalAbsorbed
        (hasExternalStim?) $externalAbsorbed

